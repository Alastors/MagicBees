buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    maven {
        name = "forestry"
        url = "http://maven.ic2.player.to/"
    }
   ivy {
        name "Thaumcraft"
        artifactPattern "http://downloads.gtnewhorizons.com/Mods_for_Jenkins/[module]-deobf-${project.version_mc}-[revision].[ext]"
    }
    //ivy {
    //    name "Botania"
    //    artifactPattern "http://botaniamod.net/files/deobf/[module] [revision]-deobf.[ext]"
    //}
}

apply plugin: 'forge'

ext.version_mod = "${project.version_major}.${project.version_minor}.${project.version_rev}"
version = project.version_mc + "-" + project.version_mod
group= "magicbees" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "magicbees"

sourceCompatibility = 1.6
targetCompatibility = 1.6

minecraft {
    version = project.version_mc + "-" + project.version_forge
	runDir = "."
	
	replace '@VERSION@', project.version_mod
	replace '@MCVERSION@', project.version_mc
}
    
dependencies {
    compile "net.sengir.forestry:forestry_${project.version_mc}:${project.version_forestry}:api"
    runtime "net.sengir.forestry:forestry_${project.version_mc}:${project.version_forestry}:dev"
    //compile name: 'Botania', version: "${project.version_botania}", ext: 'jar'
    //compile name: 'Baubles', version: "${project.version_baubles}", ext: 'jar'
    //compile name: 'Thaumcraft', version: "${project.version_thaumcraft}", ext: 'jar'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

idea {
    module {
        inheritOutputDirs = true
    }
}

task deobfJar(type: Jar) { // Generate deobfuscated
    from sourceSets.main.output
    classifier = 'deobf'
}

artifacts {
    archives deobfJar
}

task fullBuild(dependsOn: ['build', 'deobfJar']) {
}